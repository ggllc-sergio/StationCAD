<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.nlog-project.org/schemas/NLog.xsd NLog.xsd"
      autoReload="true"
      throwExceptions="true"
      internalLogLevel="Off" internalLogFile="c:\temp\nlog-internal.log">

  <!-- optional, add some variables
  https://github.com/nlog/NLog/wiki/Configuration-file#variables
  -->
  <variable name="myvar" value="myvalue"/>

  <!--
  See https://github.com/nlog/nlog/wiki/Configuration-file
  for information on customizing logging rules and outputs.
   -->

  <extensions>
    <add assembly="NLog.Extended"/>
    <add assembly="NLog.Web"/>
  </extensions>
  <targets>

    <target name="database"
            xsi:type="Database"
            connectionStringName="NLogDB"
            commandText="insert into dbo.StationCAD_Log (Application, Logged, Level, Message,Username,ServerName, Port, Url, Https,ServerAddress, RemoteAddress,Logger, CallSite, Exception) values ('StationCAD-Web', @Logged, @Level, @Message,@Username,@ServerName, @Port, @Url, @Https,@ServerAddress, @RemoteAddress,@Logger, @Callsite, @Exception);"
            >
      <!--
      Remarks:
        The appsetting layouts require the NLog.Extended assembly.
        The aspnet-* layouts require the NLog.Web assembly.
        The Application value is determined by an AppName appSetting in Web.config.
        The "NLogDb" connection string determines the database that NLog write to.
        The create dbo.Log script in the comment below must be manually executed.
      -->

      <!--
      <parameter name="@application" layout="${appsettings:name=AppName:default=Unknown\: set AppName in appSettings}" />
      -->
      <parameter name="@logged" layout="${date}" />
      <parameter name="@level" layout="${level}" />
      <parameter name="@message" layout="${message}" />

      <parameter name="@username" layout="${identity}" />

      <parameter name="@serverName" layout="${aspnet-request:serverVariable=SERVER_NAME}" />
      <parameter name="@port" layout="${aspnet-request:serverVariable=SERVER_PORT}" />
      <parameter name="@url" layout="${aspnet-request:serverVariable=HTTP_URL}" />
      <parameter name="@https" layout="${when:inner=1:when='${aspnet-request:serverVariable=HTTPS}' == 'on'}${when:inner=0:when='${aspnet-request:serverVariable=HTTPS}' != 'on'}" />

      <parameter name="@serverAddress" layout="${aspnet-request:serverVariable=LOCAL_ADDR}" />
      <parameter name="@remoteAddress" layout="${aspnet-request:serverVariable=REMOTE_ADDR}:${aspnet-request:serverVariable=REMOTE_PORT}" />

      <parameter name="@logger" layout="${logger}" />
      <parameter name="@callSite" layout="${callsite}" />
      <parameter name="@exception" layout="${exception:tostring}" />
    </target>
  </targets>

  <rules>
    <!-- add your logging rules here -->
    <logger name="*" minlevel="Info" writeTo="database" final="false"/>

    <!--
    Write all events with minimal level of Debug (So Debug, Info, Warn, Error and Fatal, but not Trace)  to "f"
    <logger name="*" minlevel="Debug" writeTo="f" />
    -->
  </rules>
</nlog>
